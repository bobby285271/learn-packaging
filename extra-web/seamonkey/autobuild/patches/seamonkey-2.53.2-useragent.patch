# HG changeset patch
# User Ian Neal <iann_cvs@blueyonder.co.uk>
# Date 1587892026 -3600
# Parent  7b1931bdd4bda5baffdc678b6bf63474fb66ed36
Bug 1242294 - Update how Firefox compatibility is advertised - mozilla part. r=frg a=frg

diff --git a/mozilla/netwerk/protocol/http/nsHttpHandler.cpp b/mozilla/netwerk/protocol/http/nsHttpHandler.cpp
--- a/mozilla/netwerk/protocol/http/nsHttpHandler.cpp
+++ b/mozilla/netwerk/protocol/http/nsHttpHandler.cpp
@@ -207,16 +207,17 @@ nsHttpHandler::nsHttpHandler()
     , mQoSBits(0x00)
     , mEnforceAssocReq(false)
     , mLastUniqueID(NowInSeconds())
     , mSessionStartTime(0)
     , mLegacyAppName("Mozilla")
     , mLegacyAppVersion("5.0")
     , mProduct("Gecko")
     , mCompatFirefoxEnabled(false)
+    , mCompatFirefoxStrict(false)
     , mUserAgentIsDirty(true)
     , mAcceptLanguagesIsDirty(true)
     , mPromptTempRedirect(true)
     , mEnablePersistentHttpsCaching(false)
     , mDoNotTrackEnabled(false)
     , mSafeHintEnabled(false)
     , mParentalControlEnabled(false)
     , mHandlerActive(false)
@@ -924,22 +925,23 @@ nsHttpHandler::BuildUserAgent()
 
     // Product portion
     mUserAgent += ' ';
     mUserAgent += mProduct;
     mUserAgent += '/';
     mUserAgent += mProductSub;
 
     bool isFirefox = mAppName.EqualsLiteral("Firefox");
-    if (isFirefox || mCompatFirefoxEnabled) {
+    if (isFirefox || mCompatFirefoxEnabled || mCompatFirefoxStrict) {
         // "Firefox/x.y" (compatibility) app token
         mUserAgent += ' ';
         mUserAgent += mCompatFirefox;
     }
-    if (!isFirefox) {
+    // If not "strict Firefox", advertise an app name.
+    if (!isFirefox && !mCompatFirefoxStrict) {
         // App portion
         mUserAgent += ' ';
         mUserAgent += mAppName;
         mUserAgent += '/';
         mUserAgent += mAppVersion;
     }
 }
 
@@ -1161,16 +1163,22 @@ nsHttpHandler::PrefsChanged(nsIPrefBranc
     bool cVar = false;
 
     if (PREF_CHANGED(UA_PREF("compatMode.firefox"))) {
         rv = prefs->GetBoolPref(UA_PREF("compatMode.firefox"), &cVar);
         mCompatFirefoxEnabled = (NS_SUCCEEDED(rv) && cVar);
         mUserAgentIsDirty = true;
     }
 
+    if (PREF_CHANGED(UA_PREF("compatMode.strict-firefox"))) {
+        rv = prefs->GetBoolPref(UA_PREF("compatMode.strict-firefox"), &cVar);
+        mCompatFirefoxStrict = (NS_SUCCEEDED(rv) && cVar);
+        mUserAgentIsDirty = true;
+    }
+
     // general.useragent.override
     if (PREF_CHANGED(UA_PREF("override"))) {
         prefs->GetCharPref(UA_PREF("override"),
                             getter_Copies(mUserAgentOverride));
         mUserAgentIsDirty = true;
     }
 
 #ifdef ANDROID
diff --git a/mozilla/netwerk/protocol/http/nsHttpHandler.h b/mozilla/netwerk/protocol/http/nsHttpHandler.h
--- a/mozilla/netwerk/protocol/http/nsHttpHandler.h
+++ b/mozilla/netwerk/protocol/http/nsHttpHandler.h
@@ -493,16 +493,17 @@ private:
     nsCString      mOscpu;
     nsCString      mMisc;
     nsCString      mProduct;
     nsCString      mProductSub;
     nsCString      mAppName;
     nsCString      mAppVersion;
     nsCString      mCompatFirefox;
     bool           mCompatFirefoxEnabled;
+    bool           mCompatFirefoxStrict;
     nsCString      mCompatDevice;
     nsCString      mDeviceModelId;
 
     nsCString      mUserAgent;
     nsCString      mSpoofedUserAgent;
     nsCString      mUserAgentOverride;
     bool           mUserAgentIsDirty; // true if mUserAgent should be rebuilt
     bool           mAcceptLanguagesIsDirty;
# HG changeset patch
# User Ian Neal <iann_cvs@blueyonder.co.uk>
# Date 1587890601 -3600
# Parent  8db6af5a28122795835e0b4b8989ea5f629608f8
Bug 1242294 - Update how Firefox compatibility is advertised - comm part. r=frg a=frg

diff --git a/suite/app/profile/suite-prefs.js b/suite/app/profile/suite-prefs.js
--- a/suite/app/profile/suite-prefs.js
+++ b/suite/app/profile/suite-prefs.js
@@ -36,16 +36,18 @@ pref("general.startup.addressbook",     
 pref("general.open_location.last_url",      "");
 pref("general.open_location.last_window_choice", 0);
 pref("browser.urlbar.historyEnabled",       true);
 
 pref("general.smoothScroll", false);
 pref("general.autoScroll", true);
 
 pref("general.useragent.compatMode.firefox", true);
+// See bug 1242294 for how to make this work.
+pref("general.useragent.compatMode.strict-firefox", false);
 
 // 0 = blank, 1 = home (browser.startup.homepage), 2 = last visited page, 3 = resume previous browser session
 pref("browser.startup.page", 1);
 pref("browser.startup.homepage", "chrome://navigator-region/locale/region.properties");
 pref("browser.startup.homepage.count", 1);
 
 pref("browser.warnOnQuit", true);
 pref("browser.warnOnRestart", true);
diff --git a/suite/components/pref/content/pref-http.js b/suite/components/pref/content/pref-http.js
--- a/suite/components/pref/content/pref-http.js
+++ b/suite/components/pref/content/pref-http.js
@@ -1,8 +1,42 @@
 /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 function Startup() {
-  // Go away! Currently nothing here to see.
+  let compatMode = document.getElementById("uaFirefoxCompat");
+  let modeFirefox =
+    document.getElementById("general.useragent.compatMode.firefox");
+  let modeStrict =
+    document.getElementById("general.useragent.compatMode.strict-firefox");
+
+  if (modeStrict.value)
+    compatMode.value = "strict";
+  else if (modeFirefox.value)
+    compatMode.value = "compat";
+  else
+    compatMode.value = "none";
 }
+
+function updateUAPrefs(aCompatMode) {
+  let modeFirefox =
+    document.getElementById("general.useragent.compatMode.firefox");
+  // The strict option will only work in builds compiled from a SeaMonkey
+  // release branch. Additional code needs to be added to the mozilla sources.
+  // See Bug 1242294 for the needed changes.
+  let modeStrict =
+    document.getElementById("general.useragent.compatMode.strict-firefox");
+  switch (aCompatMode.value) {
+    case "strict":
+      modeStrict.value = true;
+      modeFirefox.value = false;
+      break;
+    case "compat":
+      modeStrict.value = false;
+      modeFirefox.value = true;
+      break;
+    case "none":
+      modeStrict.value = false;
+      modeFirefox.value = false;
+  }
+}
diff --git a/suite/components/pref/content/pref-http.xul b/suite/components/pref/content/pref-http.xul
--- a/suite/components/pref/content/pref-http.xul
+++ b/suite/components/pref/content/pref-http.xul
@@ -14,16 +14,19 @@
                   name="network.http.version"
                   type="string"/>
       <preference id="network.http.proxy.version"
                   name="network.http.proxy.version"
                   type="string"/>
       <preference id="general.useragent.compatMode.firefox"
                   name="general.useragent.compatMode.firefox"
                   type="bool"/>
+      <preference id="general.useragent.compatMode.strict-firefox"
+                  name="general.useragent.compatMode.strict-firefox"
+                  type="bool"/>
     </preferences>
 
     <description>&prefPara;</description>
 
     <hbox align="start">
       <groupbox flex="1">
         <caption label="&prefDirect.label;"/>
         <vbox class="indent" align="start">
@@ -54,18 +57,26 @@
         </vbox>
       </groupbox>
     </hbox>
 
     <separator class="thin"/>
 
     <groupbox>
       <caption label="&prefUseragent.label;"/>
-      <checkbox id="uaFirefoxCompat"
-                label="&prefFirefoxCompat.label;"
-                accesskey="&prefFirefoxCompat.accesskey;"
-                preference="general.useragent.compatMode.firefox"/>
+      <radiogroup id="uaFirefoxCompat"
+                  oncommand="updateUAPrefs(this);">
+        <radio value="strict"
+               label="&prefFirefoxStrict.label;"
+               accesskey="&prefFirefoxStrict.accesskey;"/>
+        <radio value="none"
+               label="&prefFirefoxNone.label;"
+               accesskey="&prefFirefoxNone.accesskey;"/>
+        <radio value="compat"
+               label="&prefFirefoxCompat2.label;"
+               accesskey="&prefFirefoxCompat2.accesskey;"/>
+      </radiogroup>
     </groupbox>
 
-    <description>&prefCompatWarning;</description>
+    <description>&prefCompatWarning2.desc;</description>
   </prefpane>
 
 </overlay>
diff --git a/suite/locales/en-US/chrome/common/pref/pref-http.dtd b/suite/locales/en-US/chrome/common/pref/pref-http.dtd
--- a/suite/locales/en-US/chrome/common/pref/pref-http.dtd
+++ b/suite/locales/en-US/chrome/common/pref/pref-http.dtd
@@ -10,11 +10,15 @@
 <!ENTITY prefEnableHTTP10.label              "Use HTTP 1.0">
 <!ENTITY prefEnableHTTP10.accesskey          "U">
 <!ENTITY prefEnableHTTP10Proxy.accesskey     "S">
 <!ENTITY prefEnableHTTP11.label              "Use HTTP 1.1">
 <!ENTITY prefEnableHTTP11.accesskey          "E">
 <!ENTITY prefEnableHTTP11Proxy.accesskey     "T">
 <!ENTITY prefPara                            "HTTP connections may be fine-tuned using these options to enhance either performance or compatibility. Some proxy servers, for example, are known to require HTTP/1.0 (see the release notes for details).">
 <!ENTITY prefUseragent.label                 "User Agent String">
-<!ENTITY prefFirefoxCompat.label             "Advertise Firefox compatibility">
-<!ENTITY prefFirefoxCompat.accesskey         "F">
-<!ENTITY prefCompatWarning                   "WARNING: disabling these settings may result in websites or services not working properly.">
+<!ENTITY prefFirefoxStrict.label             "Identify as Firefox">
+<!ENTITY prefFirefoxStrict.accesskey         "I">
+<!ENTITY prefFirefoxNone.label               "Identify as SeaMonkey">
+<!ENTITY prefFirefoxNone.accesskey           "M">
+<!ENTITY prefFirefoxCompat2.label            "Identify as SeaMonkey and advertise Firefox compatibility">
+<!ENTITY prefFirefoxCompat2.accesskey        "F">
+<!ENTITY prefCompatWarning2.desc             "WARNING: changing this setting may result in websites or services not working properly.">
