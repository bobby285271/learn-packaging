diff -Naur rt-8u172-b00.old/buildSrc/linux.gradle rt-8u172-b00/buildSrc/linux.gradle
--- rt-8u172-b00.old/buildSrc/linux.gradle      2017-11-05 01:15:32.720575732 -0500
+++ rt-8u172-b00/buildSrc/linux.gradle  2017-11-05 01:17:06.316970448 -0500
@@ -45,6 +45,10 @@
         "-fno-strict-aliasing", "-fPIC", "-fno-omit-frame-pointer", // optimization flags
         "-W", "-Wall", "-Wno-unused", "-Wno-parentheses", "-Werror=implicit-function-declaration"] // warning flags
 
+if (System.env.CFLAGS) {
+    commonFlags = System.env.CFLAGS.tokenize(' ')
+}
+
 if (!IS_64) {
     commonFlags += "-m32"
 }

--- a/build.gradle	2019-01-25 23:54:24.996669899 -0700
+++ b/build.gradle	2019-01-25 23:58:00.321738838 -0700
@@ -2597,12 +2597,12 @@
                             cmakeArgs = "$cmakeArgs -DCMAKE_SYSTEM_PROCESSOR=i586"
                         }
                         // TODO: Use cflags and ldflags from all platforms
-                        def cFlags = webkitProperties.ccFlags?.join(' ') ?: ''
-                        def lFlags = webkitProperties.linkFlags?.join(' ') ?: ''
                         // -shared flag should be omitted while creating executable.
-                        def exeFlags = webkitProperties.linkFlags?.join(' ')?.replace('-shared', '') ?: ''
-                        cmakeArgs = "$cmakeArgs -DCMAKE_C_FLAGS='${cFlags}' -DCMAKE_CXX_FLAGS='${cFlags}' -DCMAKE_ASM_FLAGS='${cFlags}'"
-                        cmakeArgs = "$cmakeArgs -DCMAKE_SHARED_LINKER_FLAGS='${lFlags}' -DCMAKE_EXE_LINKER_FLAGS='${exeFlags}'"
+                        def cFlags = System.env.CFLAGS.trim()
+                        def cxxFlags = System.env.CXXFLAGS.trim()
+                        def lFlags = System.env.LDFLAGS.trim()
+                        cmakeArgs = "$cmakeArgs -DCMAKE_C_FLAGS='${cFlags}' -DCMAKE_CXX_FLAGS='${cxxFlags}' -DCMAKE_ASM_FLAGS='${cFlags}'"
+                        cmakeArgs = "$cmakeArgs -DCMAKE_SHARED_LINKER_FLAGS='${lFlags} -shared' -DCMAKE_EXE_LINKER_FLAGS='${lFlags}'"
                     } else if (t.name.startsWith("arm")) {
                         fail("ARM target is not supported as of now.")
                     }
