##### Control part variables
UPDATE=${PKGVER:2:-3}
BUILD=${PKGVER:(-2)}
SJAVAC=1
[ "${CROSS:-$ARCH}" = "amd64" ] && export JARCH="x86_64" CONFARCH="amd64"
[ "${CROSS:-$ARCH}" = "armel" ] && export JARCH="aarch32" CONFARCH="aarch32"
[ "${CROSS:-$ARCH}" = "arm64" ] && export JARCH="aarch64" CONFARCH="aarch64"
[ "${CROSS:-$ARCH}" = "mipsel" ] && export JARCH="mipsel" CONFARCH="mipsel"
[ "${CROSS:-$ARCH}" = "powerpc" ] && export JARCH="ppc" CONFARCH="ppc"
[ "${CROSS:-$ARCH}" = "ppc64" ] && export JARCH="ppc64" CONFARCH="ppc64"

if [[ "${CROSS:-$ARCH}" != "amd64" && "${CROSS:-$ARCH}" != arm64 && "${CROSS:-$ARCH}" != "ppc64" ]]; then
    config_zero="--with-jvm-variants=zero"
    SJAVAC=0
else
    config_zero=" "
fi

if [[ "${CROSS:-$ARCH}" = armel ]]; then
    config_zero="--with-jvm-variants=client"
fi

if [[ "${SJAVAC}" == "1" ]]; then
    use_sjavac="--enable-sjavac" # Just a simple switch. And sjavac.jar is not needed, since JDK 8 has built-in a similar routine
fi

if [[ "${CROSS:-$ARCH}" = armel ]]; then
    config_bits="--host=armv7a-hardfloat-linux-gnueabi --build=armv7a-hardfloat-linux-gnueabi"
fi

unset JAVA_HOME
unset _JAVA_OPTIONS

install -d -m 755 "$SRCDIR"/image
sh configure \
    --prefix="$SRCDIR"/image \
    --with-update-version=${UPDATE} \
    --with-build-number=${BUILD} \
    --with-milestone="AOSC" \
    --with-num-cores=$(nproc) \
    --enable-unlimited-crypto \
    --with-zlib=system \
    --with-boot-jdk=/usr/lib/java-8 \
    ${config_zero} ${use_sjavac} \
    ${config_bits} \
    --enable-precompiled-headers \
    --with-extra-cxxflags="${EXTRA_CPP_FLAGS}" \
    --with-extra-cflags="${EXTRA_CFLAGS}" \
    --with-extra-ldflags="${LDFLAGS}" \
    CC=gcc CXX=g++

# FIXME: use system giflibwhen possible

make DEBUG_BINARIES=true                 \
     DISABLE_HOTSPOT_OS_VERSION_CHECK=ok \
     SCTP_WERROR= \
     all
make docs

make install

pushd image/jvm/openjdk-1.8.0_${UPDATE}-AOSC
find . -iname '*.jar' -exec chmod ugo+r {} \;
chmod ugo+r lib/ct.sym

find . -iname '*.diz' -exec rm {} \;
find . -iname '*.debuginfo' -exec rm {} \;
popd

mkdir -p "$PKGDIR"/usr/lib/java-8
cp -r image/jvm/openjdk-1.8.0_${UPDATE}-AOSC/* "$PKGDIR"/usr/lib/java-8/

mv "$PKGDIR"/usr/lib/java-8/jre/lib/management/jmxremote.password{.template,}
mv "$PKGDIR"/usr/lib/java-8/jre/lib/management/snmp.acl{.template,}

mkdir -p "$PKGDIR"/etc/openjdk-8/
for i in ${CONFARCH}/jvm.cfg \
         calendars.properties \
         content-types.properties \
         flavormap.properties \
         images/cursors/cursors.properties \
         logging.properties \
         management/jmxremote.access \
         management/jmxremote.password \
         management/management.properties \
         management/snmp.acl \
         net.properties \
         psfont.properties.ja \
         psfontj2d.properties \
         security/java.policy \
         security/java.security \
         sound.properties; do
    _filepkgpath="$PKGDIR"/usr/lib/java-8/jre/lib/${i}
    install -D -m 644 ${_filepkgpath} "$PKGDIR"/etc/openjdk-8/${i}
done

mkdir -p "$PKGDIR"/usr/src/openjdk-8
mv "$PKGDIR"/usr/lib/java-8/src.zip "$PKGDIR"/usr/src/openjdk-8/src.zip
ln -sv /usr/src/openjdk-8/src.zip "$PKGDIR"/usr/lib/java-8/src.zip

install -d -m 755 "$PKGDIR"/usr/share/doc/openjdk-8
if [[ "${CROSS:-$ARCH}" != "amd64" && "${CROSS:-$ARCH}" != "arm64" && "${CROSS:-$ARCH}" != 'armel' && "${CROSS:-$ARCH}" != 'ppc64' ]]; then
    cp -r build/linux-${JARCH}-normal-zero-release/docs/* \
        "$PKGDIR"/usr/share/doc/openjdk-8/
elif [[ "${CROSS:-$ARCH}" = 'armel' ]]; then # 32-bit architectures are "client" variants
    cp -r build/linux-${JARCH}-normal-client-release/docs/* \
        "$PKGDIR"/usr/share/doc/openjdk-8/
else
    cp -r build/linux-${JARCH}-normal-server-release/docs/* \
        "$PKGDIR"/usr/share/doc/openjdk-8/
fi

cp -r "$PKGDIR"/usr/lib/java-8/jre/* "$PKGDIR"/usr/lib/java-8/
rm -rf "$PKGDIR"/usr/lib/java-8/jre/
mkdir -p "$PKGDIR"/usr/lib/java-8/jre/lib/
pushd "$PKGDIR"/usr/lib/java-8/jre/lib/
ln -sv ../../lib/* .
popd

mkdir -p "$PKGDIR"/etc/ssl/certs/java-8
cp image/jvm/openjdk-1.8.0_${UPDATE}-AOSC/jre/lib/security/cacerts "$PKGDIR"/etc/ssl/certs/java-8/

rm -fv "$PKGDIR"/usr/lib/java-8/lib/security/cacerts
ln -sfv /etc/ssl/certs/java-8/cacerts "$PKGDIR"/usr/lib/java-8/lib/security/cacerts

cat > "$SRCDIR"/autobuild/conffiles << EOF
/etc/openjdk-8/${CONFARCH}/jvm.cfg
/etc/openjdk-8/calendars.properties
/etc/openjdk-8/content-types.properties
/etc/openjdk-8/flavormap.properties
/etc/openjdk-8/images/cursors/cursors.properties
/etc/openjdk-8/logging.properties
/etc/openjdk-8/management/jmxremote.access
/etc/openjdk-8/management/jmxremote.password
/etc/openjdk-8/management/management.properties
/etc/openjdk-8/management/snmp.acl
/etc/openjdk-8/net.properties
/etc/openjdk-8/psfont.properties.ja
/etc/openjdk-8/psfontj2d.properties
/etc/openjdk-8/security/java.policy
/etc/openjdk-8/security/java.security
/etc/openjdk-8/sound.properties
EOF

mkdir -p "$SRCDIR"/autobuild/overrides/etc/ld.so.conf.d/
cat > "$SRCDIR"/autobuild/overrides/etc/ld.so.conf.d/openjdk-8.conf << EOF
/usr/lib/java-8/lib/${CONFARCH}
/usr/lib/java-8/lib/${CONFARCH}/jli
/usr/lib/java-8/lib/${CONFARCH}/server
EOF

unset JARCH CONFARCH
