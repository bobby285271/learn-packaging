From cebd5bd2ab84c7815a9b99c0f0f16e829af7b4bc Mon Sep 17 00:00:00 2001
From: Jasen Betts <jasen@xnet.co.nz>
Date: Mon, 18 Feb 2019 13:52:16 +0000
Subject: [PATCH 08/29] Fix expansions for RFC 822 addresses having comments in
 local-part and/or domain.  Bug 2375

(cherry picked from commit e2ff8e24f41caca3623228b1ec66a3f3961ecad6)
(cherry picked from commit f634b80846cc7ffcab65c9855bcb35312f0232e8)
---
 doc/ChangeLog        |  3 +++
 src/expand.c             | 19 +++++++------------
 test/scripts/0000-Basic/0002 |  7 +++++++
 test/stdout/0002             |  7 +++++++
 4 files changed, 24 insertions(+), 12 deletions(-)

diff --git a/doc/ChangeLog b/doc/ChangeLog
index 363dc934..ea9cd270 100644
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -24,6 +24,9 @@ JH/07 GnuTLS: Our use of late (post-handshake) certificate verification, under
       TLS connection attempt, so that the normal retry-in-clear can work (if
       suitably configured).
 
+JB/01 BZg 2375: fix expansions of 822 addresses having comments in local-part
+      and/or domain.  Found and fixed by Jason Betts.
+
 
 Exim version 4.92
 -----------------
diff --git a/src/expand.c b/src/expand.c
index c2eba072..fbb2dfb1 100644
--- a/src/expand.c
+++ b/src/expand.c
@@ -7151,16 +7151,11 @@ while (*s != 0)
         uschar * t = parse_extract_address(sub, &error, &start, &end, &domain,
           FALSE);
         if (t)
-          if (c != EOP_DOMAIN)
-            {
-            if (c == EOP_LOCAL_PART && domain != 0) end = start + domain - 1;
-            yield = string_catn(yield, sub+start, end-start);
-            }
-          else if (domain != 0)
-            {
-            domain += start;
-            yield = string_catn(yield, sub+domain, end-domain);
-            }
+	  yield = c == EOP_DOMAIN
+	    ? string_cat(yield, t + domain)
+	    : c == EOP_LOCAL_PART && domain > 0
+	    ? string_catn(yield, t, domain - 1 )
+	    : string_cat(yield, t);
         continue;
         }
 
@@ -7184,7 +7179,7 @@ while (*s != 0)
 
         for (;;)
           {
-          uschar *p = parse_find_address_end(sub, FALSE);
+          uschar * p = parse_find_address_end(sub, FALSE);
           uschar saveend = *p;
           *p = '\0';
           address = parse_extract_address(sub, &error, &start, &end, &domain,
@@ -7197,7 +7192,7 @@ while (*s != 0)
           list, add in a space if the new address begins with the separator
           character, or is an empty string. */
 
-          if (address != NULL)
+          if (address)
             {
             if (yield->ptr != save_ptr && address[0] == *outsep)
               yield = string_catn(yield, US" ", 1);
-- 
2.20.1

