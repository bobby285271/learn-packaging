From 6106111972b44d5ebe29c4a3e8479c783b6ec1b7 Mon Sep 17 00:00:00 2001
From: Thomas Bernard <miniupnp@free.fr>
Date: Sun, 3 Feb 2019 13:26:27 +0100
Subject: [PATCH] miniupnpd/netfilter: build with linux kernel 5.0

should fix #346
---
 miniupnpd/Changelog.txt       |  3 +++
 miniupnpd/netfilter/iptcrdr.c | 38 +++++++++++++++++++++++++----------
 2 files changed, 30 insertions(+), 11 deletions(-)

#diff --git a/Changelog.txt b/Changelog.txt
#index 9c7a9b71..4f0f5a8e 100644
#--- a/Changelog.txt
#+++ b/Changelog.txt
#@@ -1,5 +1,8 @@
# $Id: Changelog.txt,v 1.441 2018/05/08 21:34:18 nanard Exp $
# 
#+2019/02/03:
#+  netfilter: fix build with linux kernel 5.0
#+
# 2018/09/07:
#   Fix PCP Public address announcement
# 
diff --git a/netfilter/iptcrdr.c b/netfilter/iptcrdr.c
index c520f04d..9d119d3d 100644
--- a/netfilter/iptcrdr.c
+++ b/netfilter/iptcrdr.c
#@@ -2,7 +2,7 @@
# /* vim: tabstop=4 shiftwidth=4 noexpandtab
#  * MiniUPnP project
#  * http://miniupnp.free.fr/ or http://miniupnp.tuxfamily.org/
#- * (c) 2006-2018 Thomas Bernard
#+ * (c) 2006-2019 Thomas Bernard
#  * This software is subject to the conditions detailed
#  * in the LICENCE file provided within the distribution */
# #include <stdio.h>
@@ -1180,9 +1180,11 @@ addnatrule(int proto, unsigned short eport,
 	} else {
 		match = get_udp_match(eport, 0);
 	}
-	e->nfcache = NFC_IP_DST_PT;
+	e->nfcache = NFC_UNKNOWN;
 	target = get_dnat_target(iaddr, iport);
-	e->nfcache |= NFC_UNKNOWN;
+#ifdef NFC_IP_DST_PT
+	e->nfcache |= NFC_IP_DST_PT;
+#endif
 	tmp = realloc(e, sizeof(struct ipt_entry)
 	               + match->u.match_size
 				   + target->u.target_size);
@@ -1250,9 +1252,11 @@ addmasqueraderule(int proto,
 	} else {
 		match = get_udp_match(0, iport);
 	}
-	e->nfcache = NFC_IP_DST_PT;
+	e->nfcache = NFC_UNKNOWN;
 	target = get_masquerade_target(eport);
-	e->nfcache |= NFC_UNKNOWN;
+#ifdef NFC_IP_DST_PT
+	e->nfcache |= NFC_IP_DST_PT;
+#endif
 	tmp = realloc(e, sizeof(struct ipt_entry)
 	               + match->u.match_size
 				   + target->u.target_size);
@@ -1330,9 +1334,14 @@ addpeernatrule(int proto,
 	} else {
 		match = get_udp_match(rport, iport);
 	}
-	e->nfcache = NFC_IP_DST_PT | NFC_IP_SRC_PT;
+	e->nfcache = NFC_UNKNOWN;
 	target = get_snat_target(eaddr, eport);
-	e->nfcache |= NFC_UNKNOWN;
+#ifdef NFC_IP_DST_PT
+	e->nfcache |= NFC_IP_DST_PT;
+#endif
+#ifdef NFC_IP_SRC_PT
+	e->nfcache |= NFC_IP_SRC_PT;
+#endif
 	tmp = realloc(e, sizeof(struct ipt_entry)
 	               + match->u.match_size
 				   + target->u.target_size);
@@ -1401,9 +1410,14 @@ addpeerdscprule(int proto, unsigned char dscp,
 	} else {
 		match = get_udp_match(rport, iport);
 	}
-	e->nfcache = NFC_IP_DST_PT | NFC_IP_SRC_PT;
+	e->nfcache = NFC_UNKNOWN;
 	target = get_dscp_target(dscp);
-	e->nfcache |= NFC_UNKNOWN;
+#ifdef NFC_IP_DST_PT
+	e->nfcache |= NFC_IP_DST_PT;
+#endif
+#ifdef NFC_IP_SRC_PT
+	e->nfcache |= NFC_IP_SRC_PT;
+#endif
 	tmp = realloc(e, sizeof(struct ipt_entry)
 	               + match->u.match_size
 				   + target->u.target_size);
@@ -1484,11 +1498,13 @@ add_filter_rule(int proto, const char * rhost,
 	} else {
 		match = get_udp_match(iport,0);
 	}
-	e->nfcache = NFC_IP_DST_PT;
 	e->ip.dst.s_addr = inet_addr(iaddr);
 	e->ip.dmsk.s_addr = INADDR_NONE;
+	e->nfcache = NFC_UNKNOWN;
 	target = get_accept_target();
-	e->nfcache |= NFC_UNKNOWN;
+#ifdef NFC_IP_DST_PT
+	e->nfcache |= NFC_IP_DST_PT;
+#endif
 	tmp = realloc(e, sizeof(struct ipt_entry)
 	               + match->u.match_size
 				   + target->u.target_size);
diff --git a/netfilter/iptcrdr.c b/netfilter/iptcrdr.c
index 9d119d3d..097fdb6a 100644
--- a/netfilter/iptcrdr.c
+++ b/netfilter/iptcrdr.c
@@ -1180,7 +1180,9 @@ addnatrule(int proto, unsigned short eport,
 	} else {
 		match = get_udp_match(eport, 0);
 	}
+#ifdef NFC_UNKNOWN
 	e->nfcache = NFC_UNKNOWN;
+#endif
 	target = get_dnat_target(iaddr, iport);
 #ifdef NFC_IP_DST_PT
 	e->nfcache |= NFC_IP_DST_PT;
@@ -1252,7 +1254,9 @@ addmasqueraderule(int proto,
 	} else {
 		match = get_udp_match(0, iport);
 	}
+#ifdef NFC_UNKNOWN
 	e->nfcache = NFC_UNKNOWN;
+#endif
 	target = get_masquerade_target(eport);
 #ifdef NFC_IP_DST_PT
 	e->nfcache |= NFC_IP_DST_PT;
@@ -1334,7 +1338,9 @@ addpeernatrule(int proto,
 	} else {
 		match = get_udp_match(rport, iport);
 	}
+#ifdef NFC_UNKNOWN
 	e->nfcache = NFC_UNKNOWN;
+#endif
 	target = get_snat_target(eaddr, eport);
 #ifdef NFC_IP_DST_PT
 	e->nfcache |= NFC_IP_DST_PT;
@@ -1410,7 +1416,9 @@ addpeerdscprule(int proto, unsigned char dscp,
 	} else {
 		match = get_udp_match(rport, iport);
 	}
+#ifdef NFC_UNKNOWN
 	e->nfcache = NFC_UNKNOWN;
+#endif
 	target = get_dscp_target(dscp);
 #ifdef NFC_IP_DST_PT
 	e->nfcache |= NFC_IP_DST_PT;
@@ -1500,7 +1508,9 @@ add_filter_rule(int proto, const char * rhost,
 	}
 	e->ip.dst.s_addr = inet_addr(iaddr);
 	e->ip.dmsk.s_addr = INADDR_NONE;
+#ifdef NFC_UNKNOWN
 	e->nfcache = NFC_UNKNOWN;
+#endif
 	target = get_accept_target();
 #ifdef NFC_IP_DST_PT
 	e->nfcache |= NFC_IP_DST_PT;

