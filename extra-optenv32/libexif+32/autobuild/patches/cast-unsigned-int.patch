Description: Cast to unsigned int before shifting left to avoid implicit behaviour
Origin: commit:cf37dc7934bbb10dc5d0c17db260a25aa2831595
Author: Marcus Meissner <marcus@jet.franken.de>
Bug: https://github.com/libexif/libexif/issues/20
Last-Update: 2020-01-21

---
 libexif/exif-utils.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libexif/exif-utils.c b/libexif/exif-utils.c
index 9083ddc..8a92907 100644
--- a/libexif/exif-utils.c
+++ b/libexif/exif-utils.c
@@ -132,9 +132,9 @@ exif_get_slong (const unsigned char *b, ExifByteOrder order)
 	if (!b) return 0;
         switch (order) {
         case EXIF_BYTE_ORDER_MOTOROLA:
-                return ((b[0] << 24) | (b[1] << 16) | (b[2] << 8) | b[3]);
+                return (((uint32_t)b[0] << 24) | ((uint32_t)b[1] << 16) | ((uint32_t)b[2] << 8) | (uint32_t)b[3]);
         case EXIF_BYTE_ORDER_INTEL:
-                return ((b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0]);
+                return (((uint32_t)b[3] << 24) | ((uint32_t)b[2] << 16) | ((uint32_t)b[1] << 8) | (uint32_t)b[0]);
         }
 
 	/* Won't be reached */
