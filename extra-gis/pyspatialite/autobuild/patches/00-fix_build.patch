From: David Paleino <dapal@debian.org>
Subject: don't embed spatialite files, use system-wide one
Origin: vendor
Forwarded: no

---
 setup.py |   21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

--- a/setup.py
+++ b/setup.py
@@ -44,7 +44,7 @@ sources = ["src/module.c", "src/connecti
 
 include_dirs = []
 library_dirs = []
-libraries = ['geos','geos_c','proj']
+libraries = ['geos_c','proj','spatialite']
 runtime_library_dirs = []
 extra_objects = []
 define_macros = []
@@ -113,24 +113,26 @@ def get_amalgamation():
 class MyBuildExt(build_ext):
 
     def build_extension(self, ext):
-        get_amalgamation()
+        #get_amalgamation()
         # sometimes iconv is built in, sometimes it isn't
         if not self.compiler.has_function("iconv"):
           ext.libraries.append("iconv")
 
         #Default locations for Mac
-        ext.include_dirs.append("/Library/Frameworks/GEOS.framework/unix/include/")
-        ext.include_dirs.append("/Library/Frameworks/PROJ.framework/unix/include/")
-        ext.library_dirs.append("/Library/Frameworks/GEOS.framework/unix/lib")
-        ext.library_dirs.append("/Library/Frameworks/PROJ.framework/unix/lib")
+        #ext.include_dirs.append("/Library/Frameworks/GEOS.framework/unix/include/")
+        #ext.include_dirs.append("/Library/Frameworks/PROJ.framework/unix/include/")
+        #ext.library_dirs.append("/Library/Frameworks/GEOS.framework/unix/lib")
+        #ext.library_dirs.append("/Library/Frameworks/PROJ.framework/unix/lib")
+        ext.include_dirs.append("/usr/include")
+        ext.library_dirs.append("/usr/lib")
 
         ext.define_macros.append(("SQLITE_ENABLE_FTS3", "1"))   # build with fulltext search enabled
         ext.define_macros.append(("SQLITE_ENABLE_RTREE", "1"))   # build with fulltext search enabled
         ext.define_macros.append(("SQLITE_ENABLE_COLUMN_METADATA", "1"))   # build with fulltext search enabled
         ext.define_macros.append(("OMIT_FREEXL","1")) # build without FreeXL
-        ext.sources.append(os.path.join(AMALGAMATION_ROOT, "sqlite3.c"))
-        ext.sources.append(os.path.join(AMALGAMATION_ROOT, "spatialite.c"))
-        ext.include_dirs.append(AMALGAMATION_ROOT)
+        #ext.sources.append(os.path.join(AMALGAMATION_ROOT, "sqlite3.c"))
+        #ext.sources.append(os.path.join(AMALGAMATION_ROOT, "spatialite.c"))
+        #ext.include_dirs.append(AMALGAMATION_ROOT)
         build_ext.build_extension(self, ext)
         
 
