abinfo 'Adapted from AUR: gogs.'

_pkgname=gogs
_orga=gogs
_gourl=github.com/$_orga/gogs
_confdir=conf
_scriptsdir=scripts

export GOROOT="/usr/lib/go"

abinfo 'Preparing Go build enviroment...'
mkdir -pv "$SRCDIR"/build/go/pkg
cd "$SRCDIR"/build/go

for f in "$GOROOT/"*; do
    [ "$f" = "/usr/lib/go/pkg" ] || ln -sv "$f"
done

cd pkg

for f in "$GOROOT/pkg/"*; do
    ln -sv "$f"
done

export GOROOT="$SRCDIR"/build/go
export GOPATH="$SRCDIR"/build

mkdir -pv "$GOPATH/src/${_gourl%/gogs}"
mv -v "$SRCDIR"/gogs-$PKGVER "$GOPATH"/src/${_gourl}

abinfo 'Patching config and service file...'
cd "$GOPATH"/src/${_gourl}
patch -Np1 -i "$SRCDIR"/autobuild/patches/0001-Adjust-config-for-Arch-Linux-package.patch
patch -Np1 -i "$SRCDIR"/autobuild/patches/0002-Adjust-service-file-for-Arch-Linux-package.patch

cd "$GOPATH/src/${_gourl}"

go fix
go build -x -ldflags="-s -w" -tags='sqlite pam cert'

abinfo 'Building wrapper script for Gogs backup command...'
mkdir -pv "$PKGDIR"/usr/bin
echo "#!/usr/bin/bash
if [[ \$USER != gogs ]]; then
    echo \"Must run as user gogs!\"
    exit -1
fi
export GOGS_CUSTOM=/var/lib/gogs/custom
/usr/bin/gogs backup --config /etc/gogs/app.ini \$@" \
    > "$PKGDIR"/usr/bin/gogs-backup
chmod -v +x "$PKGDIR"/usr/bin/gogs-backup

abinfo 'Packaging...'

cp -av "$SRCDIR"/build/src/${_gourl}/gogs "$PKGDIR"/usr/bin/gogs

mkdir -pv "$PKGDIR"/usr/share/gogs
cp -rv "$SRCDIR"/build/src/${_gourl}/${_confdir} "$PKGDIR"/usr/share/gogs
cp -rv "$SRCDIR"/build/src/${_gourl}/public "$PKGDIR"/usr/share/gogs
cp -rv "$SRCDIR"/build/src/${_gourl}/templates "$PKGDIR"/usr/share/gogs

mkdir -pv "$PKGDIR"/etc/gogs
chmod -v 775 "$PKGDIR"/etc/gogs
install -Dvm0664 --target-directory="$PKGDIR"/etc/gogs \
    "$PKGDIR"/usr/share/gogs/conf/app.ini*
install -Dvm0644 "$SRCDIR"/build/src/${_gourl}/${_scriptsdir}/systemd/gogs.service \
    "$PKGDIR"/usr/lib/systemd/system/gogs.service

for subdir in avatars repos certs data/sessions data/tmp; do
    install -dvm0700 "$PKGDIR"/var/lib/gogs/$subdir
done
