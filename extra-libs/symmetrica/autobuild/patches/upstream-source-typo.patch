Description: upstream source spelling correction
 Correct spelling typo in C source files as emitted by Lintian,
 spelling-error-in-binary tag; meant to be submitted to the
 upstream maintainer.
Origin: debian
Author: Jerome Benoit <calculus@rezozer.net>
Last-Update: 2016-05-15

--- a/de.c
+++ b/de.c
@@ -440,7 +440,7 @@
    if answer == e ==> explain
    if answer == g ==> go on
    if answer == r ==> retry
-   if answer == s ==> go on supress error texts
+   if answer == s ==> go on suppress error texts
    if answer == f ==> go on forever
    else               exit */
 /* AK 270689 V1.0 */ /* AK 070890 V1.1 */
@@ -457,16 +457,16 @@
     fflush(stdout);
     fflush(stderr);
     fprintf(stderr,
-"\nenter a to abort with core dump, g to go, f to supress\n");
+"\nenter a to abort with core dump, g to go, f to suppress\n");
     fprintf(stderr, 
-"s to supress further error text, r to retry,  e to explain, else stop\n");
+"s to suppress further error text, r to retry,  e to explain, else stop\n");
     fprintf(stderr,"ERROR: %s?: ",fehlertext);
 
 
     fflush(stderr);
 
     if (sym_background) {
-        fprintf(stderr,"\nerror occured in background mode finishing SYMMETRICA\n");
+        fprintf(stderr,"\nerror occurred in background mode finishing SYMMETRICA\n");
         exit(ERROR_BACKGROUND);
         }
 
--- a/ff.c
+++ b/ff.c
@@ -931,7 +931,7 @@
     *Koerperzeiger = Koerperelement;
     for (j=(INT)0;j<=i;j++)
         Koerperelement[j] = (INT)0;
-    fprintf(stderr,"input   of %ld entries, seperated by comma",i);
+    fprintf(stderr,"input   of %ld entries, separated by comma",i);
     fprintf(stderr,"\nmissing entries are 0\n");
     scanf("%s",Zeichen);
     j = (INT)1;
--- a/vc.c
+++ b/vc.c
@@ -1249,7 +1249,7 @@
     COP("scan_permvector(1)",res);
 
     d = callocobject();
-    erg += printeingabe("length of PERMUATION vector ");
+    erg += printeingabe("length of PERMUTATION vector ");
     erg += scan(INTEGER,d);
     erg += b_l_v(d,res);
     for (i=(INT)0;i<S_V_LI(res); erg += scan(PERMUTATION,S_V_I(res,i++)));
--- a/poly.c
+++ b/poly.c
@@ -330,7 +330,7 @@
     kind = scanobjectkind();
 
     erg += scan(kind,S_MO_S(c));
-    printeingabe("what kind of coefficent");
+    printeingabe("what kind of coefficient");
     kind = scanobjectkind();
     erg += scan(kind,S_MO_K(c));
     ENDR("scan_monom");
@@ -1158,7 +1158,7 @@
 
     erg += 
     printeingabe("input of a POLYNOM object as a sum of MONOM objects");
-    printeingabe("what kind of coefficent");
+    printeingabe("what kind of coefficient");
     kind = scanobjectkind();
     erg += init(POLYNOM,poly);
     d = callocobject();
@@ -1166,7 +1166,7 @@
     erg += b_skn_po(callocobject(),callocobject(),NULL,d);
     printeingabe("enter the exponent vector of the polynom");
     erg += scan(INTEGERVECTOR,S_PO_S(d));
-    printeingabe("enter the coefficent of the polynom");
+    printeingabe("enter the coefficient of the polynom");
     scan(kind,S_PO_K(d));
     erg += add_apply(d,poly);
 spe:
--- a/perm.c
+++ b/perm.c
@@ -631,7 +631,7 @@
     CTO(EMPTY,"scan_kranz(1)",a);
     init(KRANZ,a);
 
-    printeingabe("input of the elment of the wreath product of two");
+    printeingabe("input of the element of the wreath product of two");
     printeingabe("symmetric groups");
     printeingabe("input of the base permutation");
     scan(PERMUTATION,s_kr_g(a));
--- a/ma.c
+++ b/ma.c
@@ -645,7 +645,7 @@
     CTO(PERMUTATION,"det050995(2)",perm);
 
     if (neq(S_M_L(mat),S_P_L(perm)))
-        return error("det050995:wrong lengthes");
+        return error("det050995:wrong lengths");
 
     erg += copy(S_M_IJ(mat,S_P_II(perm,0L)-1,S_P_II(perm,1L)-1L),c);
 
@@ -668,7 +668,7 @@
     CTO(MATRIX,"det270588(1)",mat);
     CTO(PERMUTATION,"det270588(2)",perm);
     SYMCHECK(S_M_HI(mat) != S_M_LI(mat), "det270588:not quadratic");
-    SYMCHECK(S_M_LI(mat) != S_P_LI(perm), "det270588:wrong lengthes");
+    SYMCHECK(S_M_LI(mat) != S_P_LI(perm), "det270588:wrong lengths");
 
     FREESELF(c);
     COPY(S_M_IJ(mat,0L,S_P_II(perm,0L)-1L),c);
--- a/part.c
+++ b/part.c
@@ -420,7 +420,7 @@
         else if (S_PA_K(a) == EXPONENT) {
             INT i,l,ol;
             l = (S_PA_LI(a) > S_PA_LI(b) ? S_PA_LI(a) :  S_PA_LI(b) );
-            /* l is the maximum of lengthes */
+            /* l is the maximum of lengths */
             ol = S_PA_LI(a);
             if (l > S_PA_LI(a)) 
                 erg += inc_vector_co(S_PA_S(a), l - S_PA_LI(a) );
--- a/ga.c
+++ b/ga.c
@@ -491,7 +491,7 @@
 
     erg=scan(MONOM,S_L_S(a));
     if (erg == ERROR) {
-        error("scan_gral:error in scaning listelement");
+        error("scan_gral:error in scanning listelement");
         return(ERROR); 
         }
 
--- a/list.c
+++ b/list.c
@@ -876,7 +876,7 @@
 
     erg=scan(givenkind,S_L_S(a));
     if (erg == ERROR) {
-        error("scan_list:error in scaning listelement");
+        error("scan_list:error in scanning listelement");
         goto endr_ende;
     }
 
--- a/sr.c
+++ b/sr.c
@@ -1151,7 +1151,7 @@
     C_O_K(a,typ);
     erg += printeingabe("Input of a partition type monom");
     erg += scan(PARTITION,S_S_S(a));
-    erg += printeingabe("Input of coefficent");
+    erg += printeingabe("Input of coefficient");
     kind = scanobjectkind();
     erg += scan(kind,S_S_K(a));
     erg += printeingabe("one more monom y/n");
@@ -2074,7 +2074,7 @@
 
 INT m_scalar_schur(a,b)  OP a,b;
 /* changes a scalar into a SCHURpolynomial with this scalar as 
-coefficent and labeled by the part of zero length */
+coefficient and labeled by the part of zero length */
 /* AK 181290 V1.1 */ /* AK 200891 V1.3 */
 /* AK 030498 V2.0 */ /* AK 210704 V3.0 */
 {
