cd tensorflow-${PKGVER}

./configure

if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    bazel build -c opt --config=cuda \
        tensorflow:libtensorflow.so
else
    bazel build -c opt \
        tensorflow:libtensorflow.so
fi

mkdir -p "$PKGDIR"/usr/lib/pkgconfig
cat << EOF > "$PKGDIR"/usr/lib/pkgconfig/tensorflow.pc
prefix=/usr
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${prefix}/include
modules=1

Name: $PKGNAME
Version: $PKGVER
Description: $PKGDES
Requires:
Libs: -L\${libdir} -ltensorflow -lstdc++
Cflags: -I\${includedir}/tensorflow
EOF

install -Dm644 tensorflow/c/c_api.h "$PKGDIR"/usr/include/tensorflow/c_api.h
install -Dm644 bazel-bin/tensorflow/libtensorflow.so \
    "$PKGDIR"/usr/lib/libtensorflow.so

cd "$SRCDIR"/tensorflow-${PKGVER}-py3

PYTHON_BIN_PATH=/usr/bin/python3 ./configure
if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    bazel build -c opt --config=cuda \
        //tensorflow/tools/pip_package:build_pip_package
else
    bazel build -c opt \
        //tensorflow/tools/pip_package:build_pip_package
fi

bazel-bin/tensorflow/tools/pip_package/build_pip_package "$SRCDIR"/tensorflow-${PKGVER}-py3/pytmp

WHEEL_PACKAGE=`find "$SRCDIR"/tensorflow-${PKGVER}-py3/pytmp -name "tensor*.whl"`

pip3 install --ignore-installed --upgrade --root "$PKGDIR"/ $WHEEL_PACKAGE --no-dependencies
find "$PKGDIR" -name __pycache__ -exec rm -r {} +

cd "$SRCDIR"
