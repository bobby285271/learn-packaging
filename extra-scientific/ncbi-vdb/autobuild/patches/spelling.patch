Author: Andreas Tille <tille@debian.org>
Last-Update: Tue, 12 Jul 2016 16:15:32 +0200
Description: Fix some spelling issues

--- a/libs/krypto/encfilev2.c
+++ b/libs/krypto/encfilev2.c
@@ -970,7 +970,7 @@ rc_t KEncFileBlockRead (KEncFile * self,
 
                     PLOGERR (klogErr, (klogErr, vrc, "read missing block at "
                                        "block number '$(I)' encrypted position "
-                                       "$(E) decrypted postion $(D)",
+                                       "$(E) decrypted position $(D)",
                                        "I=%lu,E=%lu,D=%lu", block_id, epos,
                                        dpos));
                     if ( rc == 0 )
--- a/interfaces/sra/fastq.h
+++ b/interfaces/sra/fastq.h
@@ -80,7 +80,7 @@ SRA_RD_EXTERN rc_t CC FastqReaderFirstSp
 
 /* SeekSpot
  *  set current spot
- * if error occured current spot position becomes 0
+ * if error occurred current spot position becomes 0
  */
 SRA_RD_EXTERN rc_t CC FastqReaderSeekSpot(const FastqReader* self, spotid_t spot);
 
--- a/interfaces/sra/illumina.h
+++ b/interfaces/sra/illumina.h
@@ -75,7 +75,7 @@ SRA_RD_EXTERN rc_t CC IlluminaReaderFirs
 
 /* SeekSpot
  *  set current spot
- * if error occured current spot position becomes 0
+ * if error occurred current spot position becomes 0
  */
 SRA_RD_EXTERN rc_t CC IlluminaReaderSeekSpot(const IlluminaReader* self, spotid_t spot);
 
--- a/interfaces/sra/sff.h
+++ b/interfaces/sra/sff.h
@@ -68,7 +68,7 @@ SRA_RD_EXTERN rc_t CC SFFReaderFirstSpot
 
 /* SeekSpot
  *  set current spot
- * if error occured current spot position becomes 0
+ * if error occurred current spot position becomes 0
  */
 SRA_RD_EXTERN rc_t CC SFFReaderSeekSpot(const SFFReader* self, spotid_t spot);
 
--- a/interfaces/align/align-access.h
+++ b/interfaces/align/align-access.h
@@ -52,7 +52,7 @@ struct VPath;
 typedef uint8_t AlignmentStrandDirection;
 enum
 {
-    asd_Unknown, /* e.g. an error occured */
+    asd_Unknown, /* e.g. an error occurred */
     asd_Forward = 'F',
     asd_Reverse = 'R'
 };
--- a/interfaces/sra/abi.h
+++ b/interfaces/sra/abi.h
@@ -72,7 +72,7 @@ SRA_RD_EXTERN rc_t CC AbsolidReaderFirst
 
 /* SeekSpot
  *  set current spot
- * if error occured current spot position becomes 0
+ * if error occurred current spot position becomes 0
  */
 SRA_RD_EXTERN rc_t CC AbsolidReaderSeekSpot(const AbsolidReader* self, spotid_t spot);
 
--- a/interfaces/svdb/svdb.h
+++ b/interfaces/svdb/svdb.h
@@ -76,10 +76,10 @@ SVDB_EXTERN void CC svdb_close( void * s
 
 /*****************************************************************************
     (4)
-    returns the last error as plain-text if one occured
+    returns the last error as plain-text if one occurred
 
     ! NULL ptr will be ignored !
-    returns empty string if no error occured or self == NULL
+    returns empty string if no error occurred or self == NULL
 */
 SVDB_EXTERN const char * CC svdb_last_err( void );
 
--- a/libs/blast/blast-mgr.c
+++ b/libs/blast/blast-mgr.c
@@ -470,7 +470,7 @@ LIB_EXPORT uint32_t VdbBlastMgrKConfigPr
     }
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when printing Configiration");
+        LOGERR(klogInt, rc, "An error occurred when printing Configiration");
         return eVdbBlastErr;
     }
 
@@ -483,7 +483,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKDbgSe
     rc_t rc = KDbgSetString(string);
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when setting KDbgString");
+        LOGERR(klogInt, rc, "An error occurred when setting KDbgString");
         return eVdbBlastErr;
     }
 
@@ -496,7 +496,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKLogHa
     rc_t rc = KLogHandlerSet(writer, data);
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when setting KLogHandler");
+        LOGERR(klogInt, rc, "An error occurred when setting KLogHandler");
         return eVdbBlastErr;
     }
 
@@ -510,7 +510,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKLogHa
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KLogHandler to StdErr");
+            klogInt, rc, "An error occurred when setting KLogHandler to StdErr");
         return eVdbBlastErr;
     }
 
@@ -524,7 +524,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKLogHa
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KLogHandler to StdOut");
+            klogInt, rc, "An error occurred when setting KLogHandler to StdOut");
         return eVdbBlastErr;
     }
 
@@ -537,7 +537,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKLogLi
     rc_t rc = KLogLibHandlerSet(writer, data);
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when setting KLogLibHandler");
+        LOGERR(klogInt, rc, "An error occurred when setting KLogLibHandler");
         return eVdbBlastErr;
     }
 
@@ -551,7 +551,7 @@ uint32_t CC VdbBlastMgrKLogLibHandlerSet
 
     if (rc != 0) {
         LOGERR(klogInt, rc,
-            "An error occured when setting KLogLibHandler to StdErr");
+            "An error occurred when setting KLogLibHandler to StdErr");
         return eVdbBlastErr;
     }
 
@@ -565,7 +565,7 @@ uint32_t CC VdbBlastMgrKLogLibHandlerSet
 
     if (rc != 0) {
         LOGERR(klogInt, rc,
-            "An error occured when setting KLogLibHandler to StdOut");
+            "An error occurred when setting KLogLibHandler to StdOut");
         return eVdbBlastErr;
     }
 
@@ -578,7 +578,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKOutHa
     rc_t rc = KOutHandlerSet(writer, data);
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when setting KOutHandler");
+        LOGERR(klogInt, rc, "An error occurred when setting KOutHandler");
         return eVdbBlastErr;
     }
 
@@ -592,7 +592,7 @@ uint32_t CC VdbBlastMgrKOutHandlerSetStd
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KOutHandler to StdErr");
+            klogInt, rc, "An error occurred when setting KOutHandler to StdErr");
         return eVdbBlastErr;
     }
 
@@ -606,7 +606,7 @@ uint32_t CC VdbBlastMgrKOutHandlerSetStd
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KOutHandler to StdOut");
+            klogInt, rc, "An error occurred when setting KOutHandler to StdOut");
         return eVdbBlastErr;
     }
 
@@ -620,7 +620,7 @@ uint32_t CC VdbBlastMgrKStsHandlerSetStd
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KStsHandler to StdErr");
+            klogInt, rc, "An error occurred when setting KStsHandler to StdErr");
         return eVdbBlastErr;
     }
 
@@ -634,7 +634,7 @@ uint32_t CC VdbBlastMgrKStsHandlerSetStd
 
     if (rc != 0) {
         LOGERR(
-            klogInt, rc, "An error occured when setting KStsHandler to StdOut");
+            klogInt, rc, "An error occurred when setting KStsHandler to StdOut");
         return eVdbBlastErr;
     }
 
@@ -647,7 +647,7 @@ LIB_EXPORT uint32_t CC VdbBlastMgrKLogLe
     rc_t rc = KLogLevelSet(lvl);
 
     if (rc != 0) {
-        LOGERR(klogInt, rc, "An error occured when setting KLogLevel");
+        LOGERR(klogInt, rc, "An error occurred when setting KLogLevel");
         return eVdbBlastErr;
     }
 
--- a/libs/kns/linux/sysendpoint.c
+++ b/libs/kns/linux/sysendpoint.c
@@ -131,10 +131,10 @@ rc_t CC KNSManagerInitDNSEndpoint ( stru
                         rc = RC ( rcNS, rcNoTarg, rcValidating, rcConnection, rcEmpty );
                         break;
 #endif
-                    case NO_RECOVERY: /* A nonrecoverable name server error occured */
+                    case NO_RECOVERY: /* A nonrecoverable name server error occurred */
                         rc = RC ( rcNS, rcNoTarg, rcValidating, rcConnection, rcDestroyed );
                         break;
-                    case TRY_AGAIN: /* A temporary error occured on an authoritative name server. Try again later */
+                    case TRY_AGAIN: /* A temporary error occurred on an authoritative name server. Try again later */
                         rc = RC ( rcNS, rcNoTarg, rcValidating, rcConnection, rcBusy );
                         break;
                     case ERANGE:
--- a/libs/sra/reader-cmn.h
+++ b/libs/sra/reader-cmn.h
@@ -100,7 +100,7 @@ rc_t SRAReaderFirstSpot(const SRAReader*
 
 /* SeekSpot
  *  set current spot
- * if error occured current spot position becomes 0
+ * if error occurred current spot position becomes 0
  */
 rc_t SRAReaderSeekSpot(const SRAReader* self, spotid_t spot);
 
